import wollok.game.*
import jugador.*
import enemigos.*

program prueba {
	// TODO: cambiar los metodos de los enemigos y objetos para hacer un collide solo
	// agregar mas extras y enemigos
	// game.cellSize(50) El tamaño default de las celdas es de 50px
	// VISUALES
	game.title("prueba")
	game.height(10)
	game.width(15)
	game.boardGround("calle.png")
	game.addVisual(primera)
		// game.addVisualIn(jugador.vida(),game.at(3,2)) Agregar la vida y armadura a la pantalla
	game.addVisual(jugador)//Necesito este addvisual para que el juego funcione
	keyboard.enter().onPressDo({ if (game.hasVisual(primera)) {
			game.removeVisual(primera)
		} else if (game.hasVisual(gameOver)) {
			game.removeVisual(gameOver)
			game.addVisual(primera)
		}
		if (!game.hasVisual(jugador)) {
			game.addVisual(jugador)
			jugador.position(new Position(x = 3, y = 3))
			jugador.movimiento(quieto)
			jugador.vidaJugador(10)
			jugador.movimiento(quieto)
		} else {
			creadorEnemigos.crear()
				// EXTRAS
			game.onTick(1000, "armadura", { extra.crearExtra()})
			game.onTick(1000, "curar", { vida.crearExtra()})
				// CONTROLES
				// MOVIMIENTO JUGADOR
			game.onTick(150, "mover", { jugador.mover()})
			keyboard.w().onPressDo({ jugador.movimiento(arriba)})
			keyboard.s().onPressDo({ jugador.movimiento(abajo)})
			keyboard.a().onPressDo({ jugador.movimiento(izq)})
			keyboard.d().onPressDo({ jugador.movimiento(der)})
			keyboard.space().onPressDo({ jugador.movimiento(quieto)})
				// PARA SABER EL ESTADO DEL JUGADOR
			keyboard.q().onPressDo({ jugador.estado()})
		}
	})
		// keyboard.r().onPressDo({ creadorEnemigos.crear() })

		// COLLIDES
		// USE UN COLLIDE SOLO Y ANDA EXACTAMENTE IGUAL QUE SI USARA UNO PARA CADA UNO
	game.onCollideDo(jugador, { ex => jugador.agarrarObjeto(ex) })
	game.onCollideDo(jugador, { enem => jugador.danioVida(enem.danio()) })
	game.start()
}
//CAMBIAR LO DEL COLLIDE QUE SE HACE DAÑO CON UN FLAG, PARA QUE HAGA EL DAÑO UNA VEZ SOLA  